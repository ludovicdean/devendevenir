---
import type { HTMLAttributes } from "astro/types";

type Props = HTMLAttributes<"a">;

const { href, class: className, ...props } = Astro.props;
const base = import.meta.env.BASE_URL;
const url = base + href;
const { pathname } = Astro.url;
const isActive = url === pathname || url === pathname.replace(/\/$/, "");
---

<a
  href={base + href}
  class:list={[
    className,
    "inline-block no-underline py-2 px-3",
    { "text-yellow-400": isActive, "text-black": !isActive }
  ]}
  {...props}
>
  <slot />
</a>


<!-- ---
import type { HTMLAttributes } from "astro/types";

type Props = HTMLAttributes<"a">;

const { href, class: className, ...props } = Astro.props;
const base = import.meta.env.BASE_URL;
const hrefT =  base + href;
const { pathname } = Astro.url;
const isActive = hrefT === pathname || hrefT === pathname.replace(/\/$/, "");
console.log(hrefT)
console.log(pathname)
console.log(isActive)
---

<a
  href={base + href}
  class:list={[className, { active: isActive }]}
  {...props}
  class="inline-block no-underline py-2 px-3 active:bolder active:no-underline text-black"
>
  <slot />
</a> -->